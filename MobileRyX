local Key = "RyXHubBest03167";
local UserInputService = game:GetService("UserInputService");
local Players = game:GetService("Players");
local LocalPlayer = Players.LocalPlayer;
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))();
local Window = Rayfield:CreateWindow({Name="RyX Hub | Key System",LoadingTitle="RyX Hub",LoadingSubtitle="by Ryan",ConfigurationSaving={Enabled=false}});
local hasKey = false;
local KeyTab = Window:CreateTab("ð Key", 4483362458);
KeyTab:CreateParagraph({Title="Where to get Key",Content="https://direct-link.net/1375026/u7hLsNFXwCQM"});
KeyTab:CreateInput({Name="Enter Key",PlaceholderText="Enter key here",RemoveTextAfterFocusLost=false,Callback=function(input)
	if (input == Key) then
		local FlatIdent_52901 = 0;
		while true do
			if (FlatIdent_52901 == 1) then
				wait(1);
				Rayfield:Destroy();
				break;
			end
			if (FlatIdent_52901 == 0) then
				hasKey = true;
				Rayfield:Notify({Title="Success",Content="Correct Key!",Duration=4});
				FlatIdent_52901 = 1;
			end
		end
	else
		local FlatIdent_2953F = 0;
		while true do
			if (FlatIdent_2953F == 0) then
				Rayfield:Notify({Title="Error",Content="Incorrect Key!",Duration=4});
				wait(2);
				FlatIdent_2953F = 1;
			end
			if (FlatIdent_2953F == 1) then
				LocalPlayer:Kick("Incorrect Key. Get key from: https://direct-link.net/1375026/u7hLsNFXwCQM");
				break;
			end
		end
	end
end});
repeat
	task.wait();
until hasKey 
getgenv().Blatant = {Prediction=0.119,FOV=30};
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))();
local Players, RunService, UIS = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService");
local Client, Cam = Players.LocalPlayer, workspace.CurrentCamera;
local Vector2New, Vector3New = Vector2.new, Vector3.new;
local LockedTarget, theta = nil, 0;
local TargetParts = {"Head","UpperTorso","HumanoidRootPart","LowerTorso"};
getgenv().Silent = {Setting={IsTargetting=false,Prediction=0.119,WallCheck=true,HealthThreshold=10,FOV={Radius=400,Visible=false},ShakeIntensity=0.35,MinimumYThreshold=-5,TriggerbotEnabled=true}};
local FOV = Drawing.new("Circle");
FOV.Transparency, FOV.Thickness, FOV.Color, FOV.Filled = 0.5, 1.6, Color3.fromRGB(230, 230, 250), true;
local function UpdateFOV(Radius)
	FOV.Position = Vector2New(Cam.ViewportSize.X / 2, Cam.ViewportSize.Y / 2);
	FOV.Visible = getgenv().Silent.Setting.FOV.Visible;
	FOV.Radius = Radius * 3.067;
end
task.spawn(function()
	while task.wait() do
		UpdateFOV(getgenv().Silent.Setting.FOV.Radius);
	end
end);
local function checkAlive()
	return Client.Character and Client.Character:FindFirstChild("Humanoid") and (Client.Character.Humanoid.Health > 0);
end
local function WallCheck(destination, ignore)
	local FlatIdent_47A9C = 0;
	local Origin;
	local Direction;
	local RayParams;
	while true do
		if (FlatIdent_47A9C == 1) then
			RayParams = RaycastParams.new();
			RayParams.FilterDescendantsInstances, RayParams.FilterType = ignore, Enum.RaycastFilterType.Blacklist;
			FlatIdent_47A9C = 2;
		end
		if (FlatIdent_47A9C == 2) then
			return workspace:Raycast(Origin, Direction, RayParams) == nil;
		end
		if (FlatIdent_47A9C == 0) then
			if not getgenv().Silent.Setting.WallCheck then
				return true;
			end
			Origin, Direction = Cam.CFrame.Position, destination - Cam.CFrame.Position;
			FlatIdent_47A9C = 1;
		end
	end
end
local function getShakeOffset(intensity)
	return Vector3New((math.random(-100, 100) / 100) * intensity, (math.random(-100, 100) / 100) * intensity, (math.random(-100, 100) / 100) * intensity);
end
local function getClosestChar()
	if not checkAlive() then
		return nil;
	end
	local Closest, Dist = nil, math.huge;
	for _, v in pairs(Players:GetPlayers()) do
		if ((v ~= Client) and v.Character and v.Character:FindFirstChild("HumanoidRootPart")) then
			local FlatIdent_43862 = 0;
			local Hum;
			while true do
				if (0 == FlatIdent_43862) then
					Hum = v.Character:FindFirstChildOfClass("Humanoid");
					if (Hum and (Hum.Health > getgenv().Silent.Setting.HealthThreshold)) then
						local ScreenPos, OnScreen = Cam:WorldToScreenPoint(v.Character.HumanoidRootPart.Position);
						local Mag = (Vector2New(ScreenPos.X, ScreenPos.Y) - Vector2New(Cam.ViewportSize.X / 2, Cam.ViewportSize.Y / 2)).Magnitude;
						if ((FOV.Radius > Mag) and (Mag < Dist) and OnScreen and WallCheck(v.Character.HumanoidRootPart.Position, {Client.Character,v.Character})) then
							Closest, Dist = v, Mag;
						end
					end
					break;
				end
			end
		end
	end
	return Closest;
end
local Old;
Old = hookmetamethod(game, "__index", function(self, key)
	local FlatIdent_8F047 = 0;
	while true do
		if (FlatIdent_8F047 == 0) then
			if (self:IsA("Mouse") and (key == "Hit") and getgenv().Silent.Setting.IsTargetting and LockedTarget) then
				local FlatIdent_31905 = 0;
				local T;
				while true do
					if (FlatIdent_31905 == 1) then
						if (T and T.Character) then
							local Part = T.Character:FindFirstChild(TargetParts[math.random(1, #TargetParts)]) or T.Character:FindFirstChild("HumanoidRootPart");
							if (Part and (Part.Position.Y > getgenv().Silent.Setting.MinimumYThreshold)) then
								local predOffset = Part.Velocity * getgenv().Silent.Setting.Prediction;
								local shake = getShakeOffset(getgenv().Silent.Setting.ShakeIntensity);
								return CFrame.new(Part.Position + predOffset + shake);
							end
						end
						break;
					end
					if (0 == FlatIdent_31905) then
						if not checkAlive() then
							return Old(self, key);
						end
						T = LockedTarget;
						FlatIdent_31905 = 1;
					end
				end
			end
			return Old(self, key);
		end
	end
end);
task.spawn(function()
	local FlatIdent_61B23 = 0;
	local RayParams;
	while true do
		if (FlatIdent_61B23 == 0) then
			RayParams = RaycastParams.new();
			RayParams.FilterType = Enum.RaycastFilterType.Blacklist;
			FlatIdent_61B23 = 1;
		end
		if (FlatIdent_61B23 == 1) then
			while task.wait(0.05) do
				if (getgenv().Silent.Setting.TriggerbotEnabled and checkAlive()) then
					local FlatIdent_946F = 0;
					local ray;
					local result;
					while true do
						if (FlatIdent_946F == 0) then
							RayParams.FilterDescendantsInstances = {Client.Character};
							ray = Cam:ViewportPointToRay(Cam.ViewportSize.X / 2, Cam.ViewportSize.Y / 2);
							FlatIdent_946F = 1;
						end
						if (FlatIdent_946F == 1) then
							result = workspace:Raycast(ray.Origin, ray.Direction * 1000, RayParams);
							if (result and result.Instance and result.Instance.Parent) then
								local FlatIdent_49AED = 0;
								local hum;
								while true do
									if (FlatIdent_49AED == 0) then
										hum = result.Instance.Parent:FindFirstChildOfClass("Humanoid");
										if (hum and (hum.Health > getgenv().Silent.Setting.HealthThreshold)) then
											local FlatIdent_99389 = 0;
											while true do
												if (FlatIdent_99389 == 1) then
													mouse1release();
													break;
												end
												if (FlatIdent_99389 == 0) then
													mouse1press();
													task.wait(0.05);
													FlatIdent_99389 = 1;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
			end
			break;
		end
	end
end);
RunService.Heartbeat:Connect(function(dt)
	if (getgenv().Silent.Setting.IsTargetting and LockedTarget and LockedTarget.Character and LockedTarget.Character:FindFirstChild("HumanoidRootPart")) then
		local FlatIdent_7A75F = 0;
		local hrp;
		local x;
		local z;
		local pos;
		local myHRP;
		while true do
			if (FlatIdent_7A75F == 3) then
				if myHRP then
					local FlatIdent_74348 = 0;
					while true do
						if (FlatIdent_74348 == 0) then
							myHRP.Velocity = Vector3.zero;
							myHRP.CFrame = CFrame.new(pos, hrp.Position);
							break;
						end
					end
				end
				break;
			end
			if (FlatIdent_7A75F == 1) then
				x = math.cos(math.rad(theta)) * 15;
				z = math.sin(math.rad(theta)) * 15;
				FlatIdent_7A75F = 2;
			end
			if (FlatIdent_7A75F == 0) then
				theta += (270 * dt)
				hrp = LockedTarget.Character.HumanoidRootPart;
				FlatIdent_7A75F = 1;
			end
			if (FlatIdent_7A75F == 2) then
				pos = hrp.Position + Vector3.new(x, 200, z);
				myHRP = Client.Character and Client.Character:FindFirstChild("HumanoidRootPart");
				FlatIdent_7A75F = 3;
			end
		end
	end
end);
Client.CharacterAdded:Connect(function(char)
	char:WaitForChild("Humanoid").Died:Connect(function()
		local FlatIdent_759F1 = 0;
		while true do
			if (0 == FlatIdent_759F1) then
				getgenv().Silent.Setting.IsTargetting = false;
				LockedTarget = nil;
				break;
			end
		end
	end);
end);
local Window = Rayfield:CreateWindow({Name="RyX Hub",LoadingTitle="RyX Hub [NEW]",LoadingSubtitle="By Ryan (solo dev)ðð¸",ConfigurationSaving={Enabled=true}});
local Updates = Window:CreateTab("Updates!", 4483362458);
local Main = Window:CreateTab("Main", 4483362458);
local Blatant = Window:CreateTab("Blatant", 4483362458);
local UpdateNotes = Updates:CreateParagraph({Title="Update v0.1",Content=[[
- Publicly Released (Hooray) ð¤©ð¥³
- Bullet TP patched but it is being worked on ð ï¸
-More updates to come+â
    ]]});
Main:CreateToggle({Name="Activate Sky Kill",CurrentValue=false,Callback=function(Value)
	getgenv().Silent.Setting.IsTargetting = Value;
end});
Main:CreateToggle({Name="Wallcheck",CurrentValue=getgenv().Silent.Setting.WallCheck,Callback=function(val)
	getgenv().Silent.Setting.WallCheck = val;
end});
Main:CreateSlider({Name="Prediction",Range={0,0.4},Increment=0.005,Suffix="Prediction",CurrentValue=getgenv().Silent.Setting.Prediction,Callback=function(v)
	getgenv().Silent.Setting.Prediction = v;
end});
local BlatantConnection;
Blatant:CreateToggle({Name="Enable Blatant Snap Aim",CurrentValue=false,Callback=function(state)
	if state then
		local Players = game:GetService("Players");
		local RunService = game:GetService("RunService");
		local LocalPlayer = Players.LocalPlayer;
		local Camera = workspace.CurrentCamera;
		local AllowedGuns = {Revolver=true,["Double Barrel"]=true,["Tactical Shotgun"]=true,Shotgun=true};
		local function GetEquippedTool()
			return LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool");
		end
		local function IsVisible(targetPart)
			if not targetPart then
				return false;
			end
			local origin = Camera.CFrame.Position;
			local direction = (targetPart.Position - origin).Unit * 500;
			local params = RaycastParams.new();
			params.FilterType = Enum.RaycastFilterType.Blacklist;
			params.FilterDescendantsInstance = {LocalPlayer.Character};
			local result = workspace:Raycast(origin, direction, params);
			return not result or result.Instance:IsDescendantOf(targetPart.Parent);
		end
		local function GetClosestPlayerInFOV()
			local FlatIdent_324DE = 0;
			local Closest;
			local ShortestDistance;
			while true do
				if (FlatIdent_324DE == 1) then
					return Closest;
				end
				if (0 == FlatIdent_324DE) then
					Closest, ShortestDistance = nil, getgenv().Blatant.FOV;
					for _, player in ipairs(Players:GetPlayers()) do
						if ((player ~= LocalPlayer) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid")) then
							if (player.Character.Humanoid.Health > 10) then
								local screenPos, OnScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position);
								local distFromCenter = (Vector2.new(screenPos.X, screenPos.Y) - (Camera.ViewportSize / 2)).Magnitude;
								if (OnScreen and (distFromCenter < ShortestDistance) and IsVisible(player.Character.HumanoidRootPart)) then
									local FlatIdent_7909D = 0;
									while true do
										if (FlatIdent_7909D == 0) then
											Closest = player;
											ShortestDistance = distFromCenter;
											break;
										end
									end
								end
							end
						end
					end
					FlatIdent_324DE = 1;
				end
			end
		end
		BlatantConnection = RunService.RenderStepped:Connect(function()
			local FlatIdent_64E40 = 0;
			local equipped;
			while true do
				if (FlatIdent_64E40 == 0) then
					equipped = GetEquippedTool();
					if (equipped and AllowedGuns[equipped.Name]) then
						local FlatIdent_8D1A5 = 0;
						local target;
						while true do
							if (0 == FlatIdent_8D1A5) then
								target = GetClosestPlayerInFOV();
								if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
									local FlatIdent_8B523 = 0;
									local part;
									local predicted;
									while true do
										if (FlatIdent_8B523 == 1) then
											Camera.CFrame = CFrame.new(Camera.CFrame.Position, predicted);
											break;
										end
										if (FlatIdent_8B523 == 0) then
											part = target.Character.HumanoidRootPart;
											predicted = part.Position + (part.Velocity * getgenv().Blatant.Prediction);
											FlatIdent_8B523 = 1;
										end
									end
								end
								break;
							end
						end
					end
					break;
				end
			end
		end);
	elseif BlatantConnection then
		local FlatIdent_61EE = 0;
		while true do
			if (0 == FlatIdent_61EE) then
				BlatantConnection:Disconnect();
				BlatantConnection = nil;
				break;
			end
		end
	end
end});
Blatant:CreateSlider({Name="Blatant Prediction",Range={0,0.4},Increment=0.005,Suffix="Fov",CurrentValue=getgenv().Blatant.Prediction,Callback=function(val)
	getgenv().Blatant.Prediction = val;
end});
Blatant:CreateSlider({Name="Blatant FOV Radius",Range={10,1000},Increment=5,Suffix="px",CurrentValue=getgenv().Blatant.FOV,Callback=function(val)
	getgenv().Blatant.FOV = val;
end});
local BlatantNotes = Blatant:CreateParagraph({Title="Best Silent Aim (most blatant)",Content=[[
Best blatant owner (ryan) usesâ
    ]]});
local Players, RunService, UIS = game:GetService("Players"), game:GetService("RunService"), game:GetService("UserInputService");
local LocalPlayer, Camera = Players.LocalPlayer, workspace.CurrentCamera;
local Vector2New, Vector3New = Vector2.new, Vector3.new;
local Mouse = LocalPlayer:GetMouse();
local Circle = Drawing.new("Circle");
Circle.Visible = false;
Circle.Color = Color3.fromRGB(255, 255, 255);
Circle.Thickness = 1;
Circle.NumSides = 64;
getgenv().SmoothLock = {Enabled=false,LockAll=true,FOV=30,Prediction=0.119,Smoothness=0.25,ShowCircle=false,Targets={},Guns={Revolver=true,["Double Barrel"]=true,["Tactical Shotgun"]=true,Shotgun=true}};
local function EquippedGun()
	return LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool");
end
local function IsVisible(part)
	local FlatIdent_89237 = 0;
	local origin;
	local dir;
	local params;
	local hit;
	while true do
		if (FlatIdent_89237 == 2) then
			params.FilterType = Enum.RaycastFilterType.Blacklist;
			params.FilterDescendantsInstances = {LocalPlayer.Character};
			FlatIdent_89237 = 3;
		end
		if (FlatIdent_89237 == 0) then
			if not part then
				return false;
			end
			origin = Camera.CFrame.Position;
			FlatIdent_89237 = 1;
		end
		if (FlatIdent_89237 == 1) then
			dir = (part.Position - origin).Unit * 500;
			params = RaycastParams.new();
			FlatIdent_89237 = 2;
		end
		if (FlatIdent_89237 == 3) then
			hit = workspace:Raycast(origin, dir, params);
			return not hit or hit.Instance:IsDescendantOf(part.Parent);
		end
	end
end
local function ClosestTarget()
	local closest, shortest = nil, SmoothLock.FOV;
	for _, plr in ipairs(Players:GetPlayers()) do
		if ((plr ~= LocalPlayer) and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character:FindFirstChild("Humanoid")) then
			if ((plr.Character.Humanoid.Health > 10) and (SmoothLock.LockAll or SmoothLock.Targets[plr.Name])) then
				local pos, onScreen = Camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position);
				local dist = (Vector2New(pos.X, pos.Y) - (Camera.ViewportSize / 2)).Magnitude;
				if (onScreen and (dist < shortest) and IsVisible(plr.Character.HumanoidRootPart)) then
					closest, shortest = plr, dist;
				end
			end
		end
	end
	return closest;
end
RunService.RenderStepped:Connect(function()
	if not SmoothLock.Enabled then
		return;
	end
	if (not LocalPlayer.Character or (LocalPlayer.Character:FindFirstChild("Humanoid").Health <= 10)) then
		return;
	end
	Circle.Visible = SmoothLock.ShowCircle;
	Circle.Radius = SmoothLock.FOV;
	Circle.Position = Camera.ViewportSize / 2;
	local equipped = EquippedGun();
	if (equipped and SmoothLock.Guns[equipped.Name]) then
		local FlatIdent_3CF36 = 0;
		local target;
		while true do
			if (0 == FlatIdent_3CF36) then
				target = ClosestTarget();
				if (target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")) then
					local FlatIdent_4D434 = 0;
					local root;
					local predicted;
					while true do
						if (FlatIdent_4D434 == 0) then
							root = target.Character.HumanoidRootPart;
							predicted = root.Position + (root.Velocity * SmoothLock.Prediction);
							FlatIdent_4D434 = 1;
						end
						if (FlatIdent_4D434 == 1) then
							Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, predicted), SmoothLock.Smoothness);
							break;
						end
					end
				end
				break;
			end
		end
	end
end);
Blatant:CreateToggle({Name="Smooth Lock",CurrentValue=false,Callback=function(v)
	SmoothLock.Enabled = v;
end});
Blatant:CreateToggle({Name="Show FOV",CurrentValue=false,Callback=function(v)
	SmoothLock.ShowCircle = v;
end});
Blatant:CreateSlider({Name="FOV Radius",Range={10,300},Increment=1,Suffix="px",CurrentValue=SmoothLock.FOV,Callback=function(v)
	SmoothLock.FOV = v;
end});
Blatant:CreateSlider({Name="Prediction",Range={0.01,0.25},Increment=0.001,Suffix="s",CurrentValue=SmoothLock.Prediction,Callback=function(v)
	SmoothLock.Prediction = v;
end});
Blatant:CreateSlider({Name="Smoothness",Range={0.01,1},Increment=0.01,Suffix="",CurrentValue=SmoothLock.Smoothness,Callback=function(v)
	SmoothLock.Smoothness = v;
end});
Blatant:CreateToggle({Name="Lock Everyone",CurrentValue=true,Callback=function(v)
	SmoothLock.LockAll = v;
end});
for _, player in ipairs(Players:GetPlayers()) do
	if (player ~= LocalPlayer) then
		local FlatIdent_61800 = 0;
		while true do
			if (FlatIdent_61800 == 0) then
				SmoothLock.Targets[player.Name] = false;
				Blatant:CreateToggle({Name=("Lock: " .. player.Name),CurrentValue=false,Callback=function(v)
					SmoothLock.Targets[player.Name] = v;
				end});
				break;
			end
		end
	end
end
Players.PlayerAdded:Connect(function(player)
	local FlatIdent_90A41 = 0;
	while true do
		if (FlatIdent_90A41 == 0) then
			SmoothLock.Targets[player.Name] = false;
			Blatant:CreateToggle({Name=("Lock: " .. player.Name),CurrentValue=false,Callback=function(v)
				SmoothLock.Targets[player.Name] = v;
			end});
			break;
		end
	end
end);
local ScreenGui = Instance.new("ScreenGui", game.CoreGui);
local DragBox = Instance.new("Frame", ScreenGui);
local DragCorner = Instance.new("UICorner", DragBox);
local Main = Instance.new("Frame", DragBox);
local UICorner = Instance.new("UICorner", Main);
local Button = Instance.new("TextButton", Main);
local BtnCorner = Instance.new("UICorner", Button);
DragBox.Name = "DragBox";
DragBox.Size = UDim2.new(0, 20, 0, 20);
DragBox.Position = UDim2.new(0.5, -100, 0.5, -50);
DragBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80);
DragBox.Active = true;
DragBox.Draggable = true;
DragCorner.CornerRadius = UDim.new(1, 0);
Main.Name = "MainFrame";
Main.Size = UDim2.new(0, 180, 0, 60);
Main.Position = UDim2.new(0, 25, 0, 0);
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30);
Main.Parent = DragBox;
UICorner.CornerRadius = UDim.new(0, 12);
Button.Name = "RyXButton";
Button.Size = UDim2.new(1, -10, 1, -10);
Button.Position = UDim2.new(0, 5, 0, 5);
Button.BackgroundColor3 = Color3.fromRGB(0, 132, 255);
Button.Text = "RyX Activated";
Button.TextColor3 = Color3.new(1, 1, 1);
Button.Font = Enum.Font.GothamBold;
Button.TextSize = 14;
Button.Parent = Main;
BtnCorner.CornerRadius = UDim.new(0, 10);
local Active = false;
Button.MouseButton1Click:Connect(function()
	local FlatIdent_6D9D2 = 0;
	while true do
		if (FlatIdent_6D9D2 == 1) then
			Button.BackgroundColor3 = (Active and Color3.fromRGB(255, 60, 60)) or Color3.fromRGB(0, 132, 255);
			Button.Text = "RyX Activated";
			FlatIdent_6D9D2 = 2;
		end
		if (FlatIdent_6D9D2 == 2) then
			if Active then
				local target = getClosestChar();
				if target then
					local FlatIdent_72421 = 0;
					while true do
						if (FlatIdent_72421 == 0) then
							LockedTarget = target;
							Cam.CameraSubject = LockedTarget.Character:FindFirstChild("Humanoid");
							break;
						end
					end
				end
			else
				LockedTarget = nil;
				Cam.CameraSubject = Client.Character:FindFirstChild("Humanoid");
			end
			break;
		end
		if (FlatIdent_6D9D2 == 0) then
			if not getgenv().Silent.Setting.IsTargetting then
				local FlatIdent_25A9F = 0;
				while true do
					if (FlatIdent_25A9F == 0) then
						Rayfield:Notify({Title="Sky Kill",Content="Enable 'Sky Kill' in Main tab first.",Duration=3});
						return;
					end
				end
			end
			Active = not Active;
			FlatIdent_6D9D2 = 1;
		end
	end
end);
Rayfield:Notify({Title="Gui",Content="Drag the gui by the small circle on the side of it.",Duration=5});
